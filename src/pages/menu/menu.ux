<template>
  <div class="menu-container">
    <text class="time-display">{{currentTime}}</text>
    <text class="title" onclick="back">‹主菜单</text>
    <scroll class="menu-list" bounces="true">
      <div class="menu-item" onclick="goToSearch">
        <text class="item-text">搜索</text>
      </div>
      <div class="menu-item" onclick="goToDownloadList">
        <text class="item-text">已下载</text>
      </div>
      <div class="menu-item" onclick="goToList">
        <text class="item-text">播放列表</text>
      </div>
      <div class="menu-item" onclick="goToLike">
        <text class="item-text">我的收藏</text>
      </div>
      <div class="menu-item" onclick="goToSongList">
        <text class="item-text">我的歌单</text>
      </div>
      <div class="menu-item" onclick="goToUser">
        <text class="item-text">个人中心</text>
      </div>
    </scroll>
  </div>
</template>

<script>
import router from "@system.router";

export default {
  private: {
    likeList: [],
    currentTime: ''
  },

  onInit() {
    this.updateTime();
    // 每分钟更新一次时间
    setInterval(() => {
      this.updateTime();
    }, 1000);
  },

  updateTime() {
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    this.currentTime = `${hours}:${minutes}`;
  },

  back() {
    router.back();
  },

  goToList() {
    router.replace({
      uri: "/pages/list",
      params: {
        listType: 'playlist'
      }
    });
  },

  goToPlayer() {
    router.replace({
      uri: "/pages/player"
    });
  },

  goToVolume() {
    router.replace({
      uri: "/pages/volume"
    });
  },

  goToSearch() {
    router.replace({
      uri: "/pages/search"
    });
  },
    // 跳转到"已下载列表"
    goToDownloadList() {
        router.replace({
            uri: '/pages/list',
            params: {
                listType: 'downloadlist'
            }
        });
    },

  goToLike() {
    router.replace({
      uri: "/pages/list",
      params: {
        listType: 'favorites'
      }
    });
  },

  goToSongList() {
    router.replace({
      uri: "/pages/list",
      params: {
        listType: 'songlist',
        songlistId: 6658985814
      }
    });
  },
  goToUser() {
    router.replace({
      uri: "/pages/user"
    });
  },
};
</script>

<style>
.menu-container {
  width: 100%;
  height: 100%;
  flex-direction: column;
  align-items: center;
  background-color: black;
}

.title {
	font-size: 32px;
	padding: 5px;
	text-align: center;
  font-weight: bold;
	color: #fff;
}

.time-display {
  font-size: 28px;
  color: #ffffff;
  padding: 5px;
  text-align: center;
}

.menu-list {
  width: 360px;
  flex-direction: row;
  flex-wrap: wrap;
}

.menu-item {
  width: 170px;
  height: 80px;
  background-color: rgba(255, 255, 255, 0.06);
  margin: 10px 5px;
  border-radius: 36px;
  justify-content: center;
  align-items: center;
}

.item-text {
  font-size: 32px;
  color: #ffffff;
}

@media (shape: pill-shaped) or (max-width: 106) {
  .menu-container {
    padding: 10px;
  }
  
  .menu-list {
    width: 100%;
  }
  
  .title {
    font-size: 28px;
    margin-top: 20px;
  }
  
  .time-display {
    font-size: 24px;
  }
  
  .menu-item {
    height: 60px;
    margin-bottom: 10px;
  }
  
  .item-text {
    font-size: 24px;
  }
}
</style>
